(function(){
  var root=this;
  this["Templates"] = this["Templates"] || {};

  this["Templates"]["customProfile"] = function (Handlebars,depth0,helpers,partials,data) {
    this.compilerInfo = [4,'>= 1.0.0'];
    helpers = helpers; data = data || {};



    return "<style type=\"text/css\">\n.widget-step-customProfile .widget-body div {\n  overflow: hidden;\n  margin-top: 10px; }\n  .widget-step-customProfile .widget-body div label {\n    display: block;\n    margin-bottom: 3px; }\n    .widget-step-customProfile .widget-body div label span {\n      float: right;\n      font-size: 80%;\n      padding-top: 5px; }\n    .widget-step-customProfile .widget-body div label.checkbox {\n      float: left;\n      margin-left: 5px; }\n  .widget-step-customProfile .widget-body div input {\n    display: block;\n    border-radius: 5px;\n    padding: 7px 0;\n    text-indent: 5px;\n    width: 100%; }\n    .widget-step-customProfile .widget-body div input.checkbox {\n      float: left;\n      width: auto; }\n    .widget-step-customProfile .widget-body div input.error {\n      background-color: #ffcccc; }\n  .widget-step-customProfile .widget-body div select {\n    width: 100%;\n    font-size: 14px;\n    padding: 7px; }\n  .widget-step-customProfile .widget-body div #birthday select {\n    width: 100px;\n    margin-right: 10px; }\n\n</style>\n\n<script type=\"application/javascript\">\nvar step = new Chute.Widget.Step('customProfile');\n\n(function(a){var b={\"short\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"long\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]},c=new Date,d=c.getFullYear(),e=c.getMonth()+1,f=c.getDate();a.fn.birthdaypicker=function(c){var e={maxAge:120,minAge:0,futureDates:false,maxYear:d,dateFormat:\"middleEndian\",monthFormat:\"short\",placeholder:true,legend:\"\",defaultDate:false,fieldName:\"birthdate\",fieldId:\"birthdate\",hiddenDate:true,onChange:null,tabindex:null};return this.each(function(){if(c){a.extend(e,c)}var f=a(\"<fieldset class='birthday-picker'></fieldset>\"),g=a(\"<select class='birth-year' name='birth[year]'></select>\"),h=a(\"<select class='birth-month' name='birth[month]'></select>\"),i=a(\"<select class='birth-day' name='birth[day]'></select>\");if(e[\"legend\"]){a(\"<legend>\"+e[\"legend\"]+\"</legend>\").appendTo(f)}var j=e[\"tabindex\"];if(e[\"dateFormat\"]==\"bigEndian\"){f.append(g).append(h).append(i);if(j!=null){g.attr(\"tabindex\",j);h.attr(\"tabindex\",j++);i.attr(\"tabindex\",j++)}}else if(e[\"dateFormat\"]==\"littleEndian\"){f.append(i).append(h).append(g);if(j!=null){i.attr(\"tabindex\",j);h.attr(\"tabindex\",j++);g.attr(\"tabindex\",j++)}}else{f.append(h).append(i).append(g);if(j!=null){h.attr(\"tabindex\",j);i.attr(\"tabindex\",j++);g.attr(\"tabindex\",j++)}}if(e[\"placeholder\"]){a(\"<option value='0'>Year:</option>\").appendTo(g);a(\"<option value='0'>Month:</option>\").appendTo(h);a(\"<option value='0'>Day:</option>\").appendTo(i)}var k;if(e[\"defaultDate\"]){var l=new Date(e[\"defaultDate\"]),m=l.getFullYear(),n=l.getMonth()+1,o=l.getDate();k=m+\"-\"+n+\"-\"+o}if(e[\"hiddenDate\"]){a(\"<input type='hidden' name='\"+e[\"fieldName\"]+\"'/>\").attr(\"id\",e[\"fieldId\"]).val(k).appendTo(f)}var p=d-e[\"minAge\"];var q=d-e[\"maxAge\"];if(e[\"futureDates\"]&&e[\"maxYear\"]!=d){if(e[\"maxYear\"]>1e3){p=e[\"maxYear\"]}else{p=d+e[\"maxYear\"]}}while(p>=q){a(\"<option></option>\").attr(\"value\",p).text(p).appendTo(g);p--}for(var r=0;r<12;r++){a(\"<option></option>\").attr(\"value\",r+1).text(b[e[\"monthFormat\"]][r]).appendTo(h)}for(var s=1;s<32;s++){a(\"<option></option>\").attr(\"value\",s).text(s).appendTo(i)}a(this).append(f);if(e[\"defaultDate\"]){var t=new Date(e[\"defaultDate\"]);g.val(t.getFullYear());h.val(t.getMonth()+1);i.val(t.getDate())}f.change(function(){var c=new Date,d=c.getFullYear(),f=c.getMonth()+1,j=c.getDate(),l=g.val(),m=h.val(),n=i.val(),o=(new Date(l,m,0)).getDate(),p=parseInt(h.children(\":last\").val()),q=parseInt(i.children(\":last\").val());if(q>o){while(q>o){i.children(\":last\").remove();q--}}else if(q<o){while(q<o){q++;i.append(\"<option value=\"+q+\">\"+q+\"</option>\")}}if(!e[\"futureDates\"]&&l==d){if(p>f){while(p>f){h.children(\":last\").remove();p--}i.children(\":first\").attr(\"selected\",\"selected\")}}if(l!=d&&p!=12){while(p<12){h.append(\"<option value=\"+(p+1)+\">\"+b[e[\"monthFormat\"]][p]+\"</option>\");p++}}if(l*m*n!=0){k=l+\"-\"+m+\"-\"+n;a(this).find(\"#\"+e[\"fieldId\"]).val(k);if(e[\"onChange\"]!=null){e[\"onChange\"](k)}}})})}})(jQuery)\n\nstep.on('render', function(){\n  for (var i in this.options.fields) {\n    field    = this.options.fields[i];\n    field.id = \"widget-profile-field-\" + i;\n\n    if(field.type == 'dob') {\n      this.$element.find('.widget-body')\n          .append(Chute.Widget.Templates['text'](field));\n      $('<div id=\"birthday\" data-field-id=\"'+field.id+'\"></div>').insertAfter($(\".widget-body input#\"+field.id));\n      $(\".widget-body input#\"+field.id).hide();\n      var self = this;\n      $(\"#birthday\").birthdaypicker(options={\n        onChange: function() {\n          $(\".widget-body input#\"+$(\"#birthday\").data('field-id')).val($(\"#birthdate\").val());\n        },\n        \"maxAge\"        : 100,\n        \"minAge\"        : 12,\n        \"defaultDate\": ''\n      });\n\n    } else {\n      this.$element.find('.widget-body')\n        .append(Chute.Widget.Templates[field.type](field));\n    }\n  }\n});\n\nstep.on('serialize', function() {\n  var me = this, data, error, $field;\n\n  this.errors = [];\n  this.fullErrorMessages = [];\n\n  var serialized = $.map(this.$element.find('.form-field'), function(field){\n    $field = $(field);\n    $field.removeClass('error');\n\n    data = { name: $field.attr('name'), value: $field.val(), required: $field.data('required'), match: $field.data('match'), type: $field.data('type'), label: $field.data('label'), elementId: $field.attr('id') };\n\n    if (data.type === 'checkbox') {\n      data.value = $field.is(':checked');\n    }\n\n    if (data.required) {\n      if (data.value === false) {\n        data.errors = data.errors || [];\n        data.errors.push(\"is not selected\");\n      } else if (typeof data.value === 'string' && data.value.length === 0) {\n        $('#'+data.elementId).parents('div:first').addClass('error');\n        data.errors = data.errors || [];\n        data.errors.push(\"is missing\");\n      }\n    }\n\n    if (typeof data.match === 'string' && data.match.length > 0 && typeof data.value === 'string' && !(new RegExp(data.match)).test(data.value)) {\n      data.errors = data.errors || [];\n      data.errors.push(\"is invalid\");\n    }\n\n    data.validated = (typeof data.errors === 'undefined');\n\n    if (data.errors) {\n      error = {};\n      error[data.name] = data.errors;\n      me.errors.push(error);\n\n      me.fullErrorMessages.push(Chute._.map(data.errors, function(error){\n        return data.label + \" \" + error;\n      }));\n    }\n    return data;\n  });\n\n  this.fullErrorMessages = Chute._.flatten(this.fullErrorMessages);\n\n  this.widget.serializedData.profile = Chute._.object(Chute._.map(serialized, function(data) { return [data.name, data.value] }));\n\n  return serialized;\n});\n\nstep.on('complete', function() {\n  var serializedData = this.serialize();\n\n  var filtered = Chute._.filter(serializedData, function(obj){\n    return !obj.validated;\n  });\n\n  if (filtered.length > 0) {\n    Chute.Widget.alert(formattedProfileError(this.fullErrorMessages), { title: 'Errors', heading: 'There were errors:' });\n    return false;\n  } else {\n    return true;\n  }\n});\n\nvar formattedProfileError = function(errors) {\n  return \"<ul><li>\" + errors.join('</li><li>') + \"</li></ul>\";\n};\n</script>\n\n";
  };}).call(window.SpheroChooser = window.SpheroChooser || {}, this);